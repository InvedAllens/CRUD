package Ventanas;

import ConexionFTPconThreads.SFTPSubirArchivo;
import ConexionSQL.ConexionMYSQL;
import com.mxrck.autocompleter.TextAutoCompleter;
import java.io.File;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Observable;
import java.util.Observer;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;
import misc.Ticket;
import misc.Usuario;

/**
 *
 * @author Ruben Angeles
 */
public class BajaToner extends javax.swing.JFrame implements Observer {

    public Usuario usuario = Opciones.usuario;
    private Ticket t;
    private final ConexionMYSQL cn = new ConexionMYSQL("192.168.40.15", "ABC", "consultas", "soportemx");
    private String[] nss;
    private Thread th;
    private ResultSet rs;
    private File fichero;
    private String pathDestino;
    private String color;
    private int opc;

    /**
     * Creates new form BuscarTicket
     */
    public BajaToner() {
        initComponents();
        this.setLocationRelativeTo(null);
        BusyLabel.setVisible(false);
        llenarTicket();
        swing.MiSwing.iconoJFrame(this, "/images/iconoCalavera.png");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnLogOut = new javax.swing.JButton();
        lblTitulo = new javax.swing.JLabel();
        pnlBusqueda = new javax.swing.JPanel();
        lblNS = new javax.swing.JLabel();
        tfNS = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        pnlDatos = new javax.swing.JPanel();
        lblSerie = new javax.swing.JLabel();
        lblSerie_ = new javax.swing.JLabel();
        lblMarca = new javax.swing.JLabel();
        lblMarca_ = new javax.swing.JLabel();
        lblModelo = new javax.swing.JLabel();
        lblModelo_ = new javax.swing.JLabel();
        lblUbicacion = new javax.swing.JLabel();
        lblUbicacion_ = new javax.swing.JLabel();
        lblIP = new javax.swing.JLabel();
        lblIP_ = new javax.swing.JLabel();
        lblMac = new javax.swing.JLabel();
        lblMac_ = new javax.swing.JLabel();
        lblTipo = new javax.swing.JLabel();
        lblTipo_ = new javax.swing.JLabel();
        pnlInventario = new javax.swing.JPanel();
        lblToner_ = new javax.swing.JLabel();
        lbltTonerCian = new javax.swing.JLabel();
        lblTonerCian_ = new javax.swing.JLabel();
        lbltTonerMagenta = new javax.swing.JLabel();
        lblTonerMagenta_ = new javax.swing.JLabel();
        lbltTonerYellow = new javax.swing.JLabel();
        lblTonerYellow_ = new javax.swing.JLabel();
        lblTonerBlack = new javax.swing.JLabel();
        lblTonerBlack_ = new javax.swing.JLabel();
        BusyLabel = new org.jdesktop.swingx.JXBusyLabel();
        pnlBotones = new javax.swing.JPanel();
        btnLimpiar = new javax.swing.JButton();
        btnEnviar = new javax.swing.JButton();
        pnlDatosTicket = new javax.swing.JPanel();
        lblFecha = new javax.swing.JLabel();
        lblArchivo = new javax.swing.JLabel();
        DatePicker = new org.jdesktop.swingx.JXDatePicker();
        btnArchivo = new javax.swing.JButton();
        lblArchivoSeleccionado = new javax.swing.JLabel();
        lblColor = new javax.swing.JLabel();
        cbColor = new javax.swing.JComboBox<>();
        lblFondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnLogOut.setBackground(new java.awt.Color(153, 204, 255));
        btnLogOut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/exit32.png"))); // NOI18N
        btnLogOut.setToolTipText("Regresar a Menú principal");
        btnLogOut.setOpaque(false);
        btnLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogOutActionPerformed(evt);
            }
        });
        getContentPane().add(btnLogOut, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 10, -1, -1));

        lblTitulo.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(255, 255, 255));
        lblTitulo.setText("Cambio de Toner");
        getContentPane().add(lblTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 10, -1, -1));

        pnlBusqueda.setOpaque(false);

        lblNS.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblNS.setForeground(new java.awt.Color(255, 255, 255));
        lblNS.setText("Numero de Serie:");

        tfNS.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/lupa64.png"))); // NOI18N
        btnBuscar.setOpaque(false);
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBusquedaLayout = new javax.swing.GroupLayout(pnlBusqueda);
        pnlBusqueda.setLayout(pnlBusquedaLayout);
        pnlBusquedaLayout.setHorizontalGroup(
            pnlBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBusquedaLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(lblNS)
                .addGap(10, 10, 10)
                .addComponent(tfNS, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBuscar)
                .addContainerGap())
        );
        pnlBusquedaLayout.setVerticalGroup(
            pnlBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBusquedaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlBusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnBuscar)
                    .addComponent(tfNS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNS))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(pnlBusqueda, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 70, 390, 90));

        pnlDatos.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos del Equipo", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 0, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        pnlDatos.setOpaque(false);

        lblSerie.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblSerie.setForeground(new java.awt.Color(255, 255, 255));
        lblSerie.setText("Numero de Serie:");

        lblSerie_.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblSerie_.setForeground(new java.awt.Color(255, 255, 255));
        lblSerie_.setText("N/A");

        lblMarca.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblMarca.setForeground(new java.awt.Color(255, 255, 255));
        lblMarca.setText("Marca:");

        lblMarca_.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblMarca_.setForeground(new java.awt.Color(255, 255, 255));
        lblMarca_.setText("N/A");

        lblModelo.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblModelo.setForeground(new java.awt.Color(255, 255, 255));
        lblModelo.setText("Modelo:");

        lblModelo_.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblModelo_.setForeground(new java.awt.Color(255, 255, 255));
        lblModelo_.setText("N/A");

        lblUbicacion.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblUbicacion.setForeground(new java.awt.Color(255, 255, 255));
        lblUbicacion.setText("Ubicación:");

        lblUbicacion_.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblUbicacion_.setForeground(new java.awt.Color(255, 255, 255));
        lblUbicacion_.setText("N/A");

        lblIP.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblIP.setForeground(new java.awt.Color(255, 255, 255));
        lblIP.setText("IP:");

        lblIP_.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblIP_.setForeground(new java.awt.Color(255, 255, 255));
        lblIP_.setText("N/A");

        lblMac.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblMac.setForeground(new java.awt.Color(255, 255, 255));
        lblMac.setText("MAC:");

        lblMac_.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblMac_.setForeground(new java.awt.Color(255, 255, 255));
        lblMac_.setText("N/A");

        lblTipo.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblTipo.setForeground(new java.awt.Color(255, 255, 255));
        lblTipo.setText("Tipo:");

        lblTipo_.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblTipo_.setForeground(new java.awt.Color(255, 255, 255));
        lblTipo_.setText("N/A");

        javax.swing.GroupLayout pnlDatosLayout = new javax.swing.GroupLayout(pnlDatos);
        pnlDatos.setLayout(pnlDatosLayout);
        pnlDatosLayout.setHorizontalGroup(
            pnlDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDatosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblModelo, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblMarca, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblSerie, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblModelo_)
                    .addGroup(pnlDatosLayout.createSequentialGroup()
                        .addGroup(pnlDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSerie_)
                            .addComponent(lblMarca_))
                        .addGap(50, 50, 50)
                        .addGroup(pnlDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMac, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblIP, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblUbicacion, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMac_)
                            .addGroup(pnlDatosLayout.createSequentialGroup()
                                .addGroup(pnlDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblUbicacion_)
                                    .addComponent(lblIP_))
                                .addGap(50, 50, 50)
                                .addComponent(lblTipo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblTipo_)))))
                .addContainerGap(417, Short.MAX_VALUE))
        );
        pnlDatosLayout.setVerticalGroup(
            pnlDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDatosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSerie)
                    .addComponent(lblSerie_)
                    .addComponent(lblUbicacion)
                    .addComponent(lblUbicacion_)
                    .addComponent(lblTipo)
                    .addComponent(lblTipo_))
                .addGap(18, 18, 18)
                .addGroup(pnlDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMarca)
                    .addComponent(lblMarca_)
                    .addComponent(lblIP)
                    .addComponent(lblIP_))
                .addGap(18, 18, 18)
                .addGroup(pnlDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblModelo)
                    .addComponent(lblModelo_)
                    .addComponent(lblMac)
                    .addComponent(lblMac_))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        getContentPane().add(pnlDatos, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 830, 140));

        pnlInventario.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Inventario toner", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial", 0, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        pnlInventario.setOpaque(false);

        lblToner_.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblToner_.setForeground(new java.awt.Color(255, 255, 255));
        lblToner_.setText("N/A");

        lbltTonerCian.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lbltTonerCian.setForeground(new java.awt.Color(255, 255, 255));
        lbltTonerCian.setText("Toner Cian:");

        lblTonerCian_.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblTonerCian_.setForeground(new java.awt.Color(255, 255, 255));
        lblTonerCian_.setText("N/A");

        lbltTonerMagenta.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lbltTonerMagenta.setForeground(new java.awt.Color(255, 255, 255));
        lbltTonerMagenta.setText("Toner Magenta:");

        lblTonerMagenta_.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblTonerMagenta_.setForeground(new java.awt.Color(255, 255, 255));
        lblTonerMagenta_.setText("N/A");

        lbltTonerYellow.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lbltTonerYellow.setForeground(new java.awt.Color(255, 255, 255));
        lbltTonerYellow.setText("Toner Yellow:");

        lblTonerYellow_.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblTonerYellow_.setForeground(new java.awt.Color(255, 255, 255));
        lblTonerYellow_.setText("N/A");

        lblTonerBlack.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblTonerBlack.setForeground(new java.awt.Color(255, 255, 255));
        lblTonerBlack.setText("Toner Black:");

        lblTonerBlack_.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblTonerBlack_.setForeground(new java.awt.Color(255, 255, 255));
        lblTonerBlack_.setText("N/A");

        javax.swing.GroupLayout pnlInventarioLayout = new javax.swing.GroupLayout(pnlInventario);
        pnlInventario.setLayout(pnlInventarioLayout);
        pnlInventarioLayout.setHorizontalGroup(
            pnlInventarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInventarioLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(pnlInventarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTonerBlack, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbltTonerYellow, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbltTonerMagenta, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbltTonerCian, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(10, 10, 10)
                .addGroup(pnlInventarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTonerYellow_)
                    .addComponent(lblTonerMagenta_)
                    .addComponent(lblTonerCian_)
                    .addComponent(lblTonerBlack_))
                .addContainerGap(45, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlInventarioLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblToner_)
                .addGap(82, 82, 82))
        );
        pnlInventarioLayout.setVerticalGroup(
            pnlInventarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInventarioLayout.createSequentialGroup()
                .addComponent(lblToner_)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlInventarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTonerCian_)
                    .addComponent(lbltTonerCian))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlInventarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTonerMagenta_)
                    .addComponent(lbltTonerMagenta, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlInventarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTonerYellow_)
                    .addComponent(lbltTonerYellow))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlInventarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTonerBlack_)
                    .addComponent(lblTonerBlack))
                .addGap(0, 6, Short.MAX_VALUE))
        );

        getContentPane().add(pnlInventario, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 200, 140));

        BusyLabel.setForeground(new java.awt.Color(255, 255, 255));
        BusyLabel.setText("Cargando...");
        BusyLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        getContentPane().add(BusyLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 110, -1, -1));

        pnlBotones.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Opciones", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        pnlBotones.setForeground(new java.awt.Color(255, 255, 255));
        pnlBotones.setOpaque(false);

        btnLimpiar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cancel32.png"))); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnLimpiar.setOpaque(false);
        btnLimpiar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });
        pnlBotones.add(btnLimpiar);

        btnEnviar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnEnviar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check32.png"))); // NOI18N
        btnEnviar.setText("Enviar");
        btnEnviar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEnviar.setOpaque(false);
        btnEnviar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarActionPerformed(evt);
            }
        });
        pnlBotones.add(btnEnviar);

        getContentPane().add(pnlBotones, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 380, 200, 100));

        pnlDatosTicket.setBackground(new java.awt.Color(0, 0, 0));
        pnlDatosTicket.setOpaque(false);

        lblFecha.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblFecha.setForeground(new java.awt.Color(255, 255, 255));
        lblFecha.setText("Fecha:");

        lblArchivo.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblArchivo.setForeground(new java.awt.Color(255, 255, 255));
        lblArchivo.setText("Archivo:");

        DatePicker.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        btnArchivo.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnArchivo.setText("Seleccionar Archivo");
        btnArchivo.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnArchivo.setOpaque(false);
        btnArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArchivoActionPerformed(evt);
            }
        });

        lblArchivoSeleccionado.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblArchivoSeleccionado.setForeground(new java.awt.Color(255, 255, 255));
        lblArchivoSeleccionado.setText("Archivo No Seleccionado");

        lblColor.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblColor.setForeground(new java.awt.Color(255, 255, 255));
        lblColor.setText("Color:");

        cbColor.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cbColor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecciona un Color", "Cian", "Magenta", "Yellow", "Black" }));

        javax.swing.GroupLayout pnlDatosTicketLayout = new javax.swing.GroupLayout(pnlDatosTicket);
        pnlDatosTicket.setLayout(pnlDatosTicketLayout);
        pnlDatosTicketLayout.setHorizontalGroup(
            pnlDatosTicketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDatosTicketLayout.createSequentialGroup()
                .addGap(112, 112, 112)
                .addGroup(pnlDatosTicketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblColor)
                    .addComponent(lblFecha)
                    .addComponent(lblArchivo))
                .addGap(18, 18, 18)
                .addGroup(pnlDatosTicketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlDatosTicketLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lblArchivoSeleccionado))
                    .addComponent(DatePicker, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnArchivo, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                    .addComponent(cbColor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 80, Short.MAX_VALUE))
        );
        pnlDatosTicketLayout.setVerticalGroup(
            pnlDatosTicketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDatosTicketLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDatosTicketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblColor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(pnlDatosTicketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(DatePicker, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblFecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(pnlDatosTicketLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblArchivoSeleccionado, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );

        getContentPane().add(pnlDatosTicket, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 340, 440, 190));

        lblFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/FondoBuscarNS.png"))); // NOI18N
        getContentPane().add(lblFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 850, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogOutActionPerformed
        Opciones o = new Opciones();
        o.setUsuario(usuario);
        o.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnLogOutActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        getValores(tfNS.getText());
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        limpiarCampos();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarActionPerformed
        if (validacion()) {
            btnArchivo.setEnabled(false);
            btnEnviar.setEnabled(false);
            BusyLabel.setBusy(true);
            BusyLabel.setText("Obteniendo Datos");
            BusyLabel.setVisible(true);
            getDatos();
            BusyLabel.setText("Subiendo Archivo");
            SFTPSubirArchivo up = new SFTPSubirArchivo(fichero);
            up.addObserver(this);
            th = new Thread(up);
            th.start();
            cn.connect();
            try {
                cn.executeQuery("INSERT INTO Docs(ns,fecha,ticket,detalle,observaciones,path,username) VALUES ('"+t.getNs()+"','"+devolverFecha()+"','"+t.getTicket()+"','"+t.getDetalle()+"','"+t.getObservaciones()+"','"+pathDestino+"','"+usuario.getUsername()+"')");
                cn.executeQuery("UPDATE Toner SET "+color.toLowerCase()+" = '"+opc+"' WHERE modelo = '"+lblToner_.getText()+"'");
                cn.disconnect();
            } catch (SQLException e) {
                System.out.println(e.getMessage());
            }
        } else {
        }
    }//GEN-LAST:event_btnEnviarActionPerformed

    private void btnArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArchivoActionPerformed
        //Creamos el objeto JFileChooser
        JFileChooser fc = new JFileChooser();
        fc.setFileFilter(new FileNameExtensionFilter("PDF", "pdf"));
        fc.setDialogTitle("SELECCIONAR UN ARCHIVO");
        JPanel contentPane = new JPanel();
        contentPane.setLayout(null);
        //Abrimos la ventana, guardamos la opcion seleccionada por el usuario
        int seleccion = fc.showOpenDialog(contentPane);
        //Si el usuario, pincha en aceptar
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            //Seleccionamos el fichero
            fichero = fc.getSelectedFile();
            //Ecribe la ruta del fichero seleccionado en el campo de texto
            lblArchivoSeleccionado.setText(fichero.getName());
            //Escribe El path de origen
            System.out.println("Archivo selecionado: " + fichero.getAbsolutePath());
        }
        //validacion();
    }//GEN-LAST:event_btnArchivoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BajaToner.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new BajaToner().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXBusyLabel BusyLabel;
    private org.jdesktop.swingx.JXDatePicker DatePicker;
    private javax.swing.JButton btnArchivo;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEnviar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnLogOut;
    private javax.swing.JComboBox<String> cbColor;
    private javax.swing.JLabel lblArchivo;
    private javax.swing.JLabel lblArchivoSeleccionado;
    private javax.swing.JLabel lblColor;
    private javax.swing.JLabel lblFecha;
    private javax.swing.JLabel lblFondo;
    private javax.swing.JLabel lblIP;
    private javax.swing.JLabel lblIP_;
    private javax.swing.JLabel lblMac;
    private javax.swing.JLabel lblMac_;
    private javax.swing.JLabel lblMarca;
    private javax.swing.JLabel lblMarca_;
    private javax.swing.JLabel lblModelo;
    private javax.swing.JLabel lblModelo_;
    private javax.swing.JLabel lblNS;
    private javax.swing.JLabel lblSerie;
    private javax.swing.JLabel lblSerie_;
    private javax.swing.JLabel lblTipo;
    private javax.swing.JLabel lblTipo_;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JLabel lblTonerBlack;
    private javax.swing.JLabel lblTonerBlack_;
    private javax.swing.JLabel lblTonerCian_;
    private javax.swing.JLabel lblTonerMagenta_;
    private javax.swing.JLabel lblTonerYellow_;
    private javax.swing.JLabel lblToner_;
    private javax.swing.JLabel lblUbicacion;
    private javax.swing.JLabel lblUbicacion_;
    private javax.swing.JLabel lbltTonerCian;
    private javax.swing.JLabel lbltTonerMagenta;
    private javax.swing.JLabel lbltTonerYellow;
    private javax.swing.JPanel pnlBotones;
    private javax.swing.JPanel pnlBusqueda;
    private javax.swing.JPanel pnlDatos;
    private javax.swing.JPanel pnlDatosTicket;
    private javax.swing.JPanel pnlInventario;
    private javax.swing.JTextField tfNS;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(Observable o, Object arg) {
        boolean flag = (boolean) arg;
        if (flag == false) {
            BusyLabel.setVisible(false);
            BusyLabel.setBusy(false);
            btnEnviar.setEnabled(true);
            btnArchivo.setEnabled(true);
            javax.swing.JOptionPane.showMessageDialog(this, "Registro Creado Exitosamente");
            limpiarCampos();
        }
    }

    private void llenarTicket() {
        TextAutoCompleter textAutoCompleter = new TextAutoCompleter(tfNS);
        try {
            cn.connect();
            rs = cn.consulta("SELECT ns FROM Equipo");
            while (rs.next()) {
                textAutoCompleter.addItem(rs.getObject("ns"));
            }
            cn.disconnect();
        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }

    private void getValores(String serie) {
        if (!serie.isEmpty()) {
            try {
                cn.connect();
                rs = cn.consulta("SELECT * FROM Equipo WHERE ns = '" + tfNS.getText() + "'");
                while (rs.next()) {
                    lblSerie_.setText(rs.getString(1));
                    lblMarca_.setText(rs.getString(2));
                    lblModelo_.setText(rs.getString(3) + " " + rs.getString(4));
                    lblUbicacion_.setText(rs.getString(7) + " " + rs.getString(8));
                    lblIP_.setText(rs.getString(5));
                    lblMac_.setText(rs.getString(6));
                    lblTipo_.setText(rs.getString(9));
                    lblToner_.setText(rs.getString(10));
                }
                rs = cn.consulta("SELECT * FROM Toner WHERE modelo = '" + lblToner_.getText() + "'");
                if (lblTipo_.getText().equals("Blanco y negro")) {
                    lbltTonerCian.setVisible(false);
                    lblTonerCian_.setVisible(false);
                    lbltTonerMagenta.setVisible(false);
                    lblTonerMagenta_.setVisible(false);
                    lbltTonerYellow.setVisible(false);
                    lblTonerYellow_.setVisible(false);
                    llenarCB(false, cbColor);
                    if (rs.next()) {
                        lblTonerBlack_.setText(String.valueOf(rs.getInt(5)));
                    }
                } else {
                    llenarCB(true, cbColor);
                    while (rs.next()) {
                        lbltTonerCian.setVisible(true);
                        lblTonerCian_.setVisible(true);
                        lbltTonerMagenta.setVisible(true);
                        lblTonerMagenta_.setVisible(true);
                        lbltTonerYellow.setVisible(true);
                        lblTonerYellow_.setVisible(true);
                        lblTonerCian_.setText(String.valueOf(rs.getInt(2)));
                        lblTonerMagenta_.setText(String.valueOf(rs.getInt(3)));
                        lblTonerYellow_.setText(String.valueOf(rs.getInt(4)));
                        lblTonerBlack_.setText(String.valueOf(rs.getInt(5)));
                    }
                }

                cn.disconnect();
            } catch (SQLException e) {
                System.out.println(e.getMessage());
            }
        }
    }

    private void limpiarCampos() {
        fichero = null;
        llenarCB(true, cbColor);
        cbColor.setSelectedIndex(0);
        tfNS.setText("");
        DatePicker.setDate(null);
        lblArchivoSeleccionado.setText("Archivo No Seleccionado");
        lblSerie_.setText("N/A");
        lblMarca_.setText("N/A");
        lblModelo_.setText("N/A");
        lblUbicacion_.setText("N/A");
        lblIP_.setText("N/A");
        lblMac_.setText("N/A");
        lblTipo_.setText("N/A");
        lblToner_.setText("N/A");
        lblTonerCian_.setText("N/A");
        lblTonerMagenta_.setText("N/A");
        lblTonerYellow_.setText("N/A");
        lblTonerBlack_.setText("N/A");

    }

    private boolean validacion() {
        if (!tfNS.getText().isBlank()) {
            if (cbColor.getSelectedIndex() != 0) {
                if (DatePicker.getDate() != null) {
                    if (this.fichero != null) {
                        return true;
                    } else {
                        javax.swing.JOptionPane.showMessageDialog(this, "DEBES SELECCIONAR UN ARCHIVO PDF", "EROR", javax.swing.JOptionPane.ERROR_MESSAGE);
                        return false;
                    }
                } else {
                    javax.swing.JOptionPane.showMessageDialog(this, "DEBES SELECCIONAR FECHA VALIDA", "EROR", javax.swing.JOptionPane.ERROR_MESSAGE);
                    return false;
                }
            } else {
                javax.swing.JOptionPane.showMessageDialog(this, "DEBES SELECCIONAR UN COLOR", "EROR", javax.swing.JOptionPane.ERROR_MESSAGE);
                return false;
            }
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "NUMERO DE SERIE NO VALIDO", "EROR", javax.swing.JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }

    private void getDatos() {
        switch ((String)cbColor.getSelectedItem()){
            case "Cian":
                color = "C";
                opc = Integer.parseInt(lblTonerCian_.getText())-1;
                break;
            case "Magenta":
                color = "M";
                opc = Integer.parseInt(lblTonerMagenta_.getText())-1;
                break;
            case "Yellow":
                color = "Y";
                opc = Integer.parseInt(lblTonerYellow_.getText())-1;
                break;
            case "Black":
                color = "K";
                opc = Integer.parseInt(lblTonerBlack_.getText())-1;
        String detalles = "Se Cambia Toner " + lblToner_.getText() + color;
        t = new Ticket(2, tfNS.getText(),
                detalles, detalles, fichero.getAbsolutePath(), new Date(devolverFecha()));
        pathDestino = "/home/archivo/" + fichero.getName();
        }
    }

    private String devolverFecha() {
        Date fecha = DatePicker.getDate();
        DateFormat formato = new SimpleDateFormat("yyyy/MM/dd");
        return formato.format(fecha);
    }

    /**
     * Metodo para llenar un jComboBox de dos maneras distintas
     *
     * @param flag Para alternar entre opciones True = Color; False = ByN;
     * @param cb es el jComboBox sobre el cual vamos a actuar
     */
    private void llenarCB(boolean flag, JComboBox cb) {
        if (flag) {
            cb.removeAllItems();
            cb.addItem("Selecciona un Color");
            cb.addItem("Cian");
            cb.addItem("Magenta");
            cb.addItem("Yellow");
            cb.addItem("Black");
        } else {
            cb.removeAllItems();
            cb.addItem("Black");
        }
    }
}
